diff --git a/src/EventListener/SetFromListener.php b/src/EventListener/SetFromListener.php
new file mode 100644
index 0000000..e66d903
--- /dev/null
+++ b/src/EventListener/SetFromListener.php
@@ -0,0 +1,28 @@
+<?php
+
+namespace App\EventListener;
+
+use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use Symfony\Component\Mailer\Event\MessageEvent;
+use Symfony\Component\Mime\Email;
+use Symfony\Component\Mime\NamedAddress;
+
+class SetFromListener implements EventSubscriberInterface
+{
+    public static function getSubscribedEvents()
+    {
+        return [
+            MessageEvent::class => 'onMessage',
+        ];
+    }
+
+    public function onMessage(MessageEvent $event)
+    {
+        $email = $event->getMessage();
+        if (!$email instanceof Email) {
+            return;
+        }
+
+        $email->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'));
+    }
+}
diff --git a/src/Service/Mailer.php b/src/Service/Mailer.php
index 93abe19..7a0ee07 100644
--- a/src/Service/Mailer.php
+++ b/src/Service/Mailer.php
@@ -28,7 +28,6 @@ class Mailer
     public function sendWelcomeMessage(User $user): TemplatedEmail
     {
         $email = (new TemplatedEmail())
-            ->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'))
             ->to(new NamedAddress($user->getEmail(), $user->getFirstName()))
             ->subject('Welcome to the Space Bar!')
             ->htmlTemplate('email/welcome.html.twig')
@@ -51,7 +50,6 @@ class Mailer
         $pdf = $this->pdf->getOutputFromHtml($html);
 
         $email = (new TemplatedEmail())
-            ->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'))
             ->to(new NamedAddress($author->getEmail(), $author->getFirstName()))
             ->subject('Your weekly report on the Space Bar!')
             ->htmlTemplate('email/author-weekly-report.html.twig')
