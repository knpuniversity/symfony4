diff --git a/src/Command/AuthorWeeklyReportSendCommand.php b/src/Command/AuthorWeeklyReportSendCommand.php
index 8370dbb..0f54234 100644
--- a/src/Command/AuthorWeeklyReportSendCommand.php
+++ b/src/Command/AuthorWeeklyReportSendCommand.php
@@ -4,18 +4,13 @@ namespace App\Command;
 
 use App\Repository\ArticleRepository;
 use App\Repository\UserRepository;
-use Knp\Snappy\Pdf;
-use Symfony\Bridge\Twig\Mime\TemplatedEmail;
+use App\Service\Mailer;
 use Symfony\Component\Console\Command\Command;
 use Symfony\Component\Console\Input\InputArgument;
 use Symfony\Component\Console\Input\InputInterface;
 use Symfony\Component\Console\Input\InputOption;
 use Symfony\Component\Console\Output\OutputInterface;
 use Symfony\Component\Console\Style\SymfonyStyle;
-use Symfony\Component\Mailer\MailerInterface;
-use Symfony\Component\Mime\NamedAddress;
-use Symfony\WebpackEncoreBundle\Asset\EntrypointLookupInterface;
-use Twig\Environment;
 
 class AuthorWeeklyReportSendCommand extends Command
 {
@@ -24,20 +19,14 @@ class AuthorWeeklyReportSendCommand extends Command
     private $userRepository;
     private $articleRepository;
     private $mailer;
-    private $twig;
-    private $pdf;
-    private $entrypointLookup;
 
-    public function __construct(UserRepository $userRepository, ArticleRepository $articleRepository, MailerInterface $mailer, Environment $twig, Pdf $pdf, EntrypointLookupInterface $entrypointLookup)
+    public function __construct(UserRepository $userRepository, ArticleRepository $articleRepository, Mailer $mailer)
     {
         parent::__construct(null);
 
         $this->userRepository = $userRepository;
         $this->articleRepository = $articleRepository;
         $this->mailer = $mailer;
-        $this->twig = $twig;
-        $this->pdf = $pdf;
-        $this->entrypointLookup = $entrypointLookup;
     }
 
     protected function configure()
@@ -64,23 +53,7 @@ class AuthorWeeklyReportSendCommand extends Command
                 continue;
             }
 
-            $this->entrypointLookup->reset();
-            $html = $this->twig->render('email/author-weekly-report-pdf.html.twig', [
-                'articles' => $articles,
-            ]);
-            $pdf = $this->pdf->getOutputFromHtml($html);
-
-            $email = (new TemplatedEmail())
-                ->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'))
-                ->to(new NamedAddress($author->getEmail(), $author->getFirstName()))
-                ->subject('Your weekly report on the Space Bar!')
-                ->htmlTemplate('email/author-weekly-report.html.twig')
-                ->context([
-                    'author' => $author,
-                    'articles' => $articles,
-                ])
-                ->attach($pdf, sprintf('weekly-report-%s.pdf', date('Y-m-d')));
-            $this->mailer->send($email);
+            $this->mailer->sendAuthorWeeklyReportMessage($author, $articles);
         }
         $io->progressFinish();
 
diff --git a/src/Controller/SecurityController.php b/src/Controller/SecurityController.php
index 240f35d..106a217 100644
--- a/src/Controller/SecurityController.php
+++ b/src/Controller/SecurityController.php
@@ -6,6 +6,7 @@ use App\Entity\User;
 use App\Form\Model\UserRegistrationFormModel;
 use App\Form\UserRegistrationFormType;
 use App\Security\LoginFormAuthenticator;
+use App\Service\Mailer;
 use Symfony\Bridge\Twig\Mime\TemplatedEmail;
 use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
 use Symfony\Component\HttpFoundation\Request;
@@ -47,7 +48,7 @@ class SecurityController extends AbstractController
     /**
      * @Route("/register", name="app_register")
      */
-    public function register(MailerInterface $mailer, Request $request, UserPasswordEncoderInterface $passwordEncoder, GuardAuthenticatorHandler $guardHandler, LoginFormAuthenticator $formAuthenticator)
+    public function register(Mailer $mailer, Request $request, UserPasswordEncoderInterface $passwordEncoder, GuardAuthenticatorHandler $guardHandler, LoginFormAuthenticator $formAuthenticator)
     {
         $form = $this->createForm(UserRegistrationFormType::class);
         $form->handleRequest($request);
@@ -73,17 +74,7 @@ class SecurityController extends AbstractController
             $em->persist($user);
             $em->flush();
 
-            $email = (new TemplatedEmail())
-                ->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'))
-                ->to(new NamedAddress($user->getEmail(), $user->getFirstName()))
-                ->subject('Welcome to the Space Bar!')
-                ->htmlTemplate('email/welcome.html.twig')
-                ->context([
-                    // You can pass whatever data you want
-                    //'user' => $user,
-                ]);
-
-            $mailer->send($email);
+            $mailer->sendWelcomeMessage($user);
 
             return $guardHandler->authenticateUserAndHandleSuccess(
                 $user,
diff --git a/src/Service/Mailer.php b/src/Service/Mailer.php
index a7465f1..b92b9db 100644
--- a/src/Service/Mailer.php
+++ b/src/Service/Mailer.php
@@ -2,14 +2,63 @@
 
 namespace App\Service;
 
+use App\Entity\User;
+use Knp\Snappy\Pdf;
+use Symfony\Bridge\Twig\Mime\TemplatedEmail;
 use Symfony\Component\Mailer\MailerInterface;
+use Symfony\Component\Mime\NamedAddress;
+use Symfony\WebpackEncoreBundle\Asset\EntrypointLookupInterface;
+use Twig\Environment;
 
 class Mailer
 {
     private $mailer;
+    private $twig;
+    private $pdf;
+    private $entrypointLookup;
 
-    public function __construct(MailerInterface $mailer)
+    public function __construct(MailerInterface $mailer, Environment $twig, Pdf $pdf, EntrypointLookupInterface $entrypointLookup)
     {
         $this->mailer = $mailer;
+        $this->twig = $twig;
+        $this->pdf = $pdf;
+        $this->entrypointLookup = $entrypointLookup;
+    }
+
+    public function sendWelcomeMessage(User $user)
+    {
+        $email = (new TemplatedEmail())
+            ->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'))
+            ->to(new NamedAddress($user->getEmail(), $user->getFirstName()))
+            ->subject('Welcome to the Space Bar!')
+            ->htmlTemplate('email/welcome.html.twig')
+            ->context([
+                // You can pass whatever data you want
+                //'user' => $user,
+            ]);
+
+        $this->mailer->send($email);
+    }
+
+    public function sendAuthorWeeklyReportMessage(User $author, array $articles)
+    {
+        $this->entrypointLookup->reset();
+        $html = $this->twig->render('email/author-weekly-report-pdf.html.twig', [
+            'articles' => $articles,
+        ]);
+        $pdf = $this->pdf->getOutputFromHtml($html);
+
+        $email = (new TemplatedEmail())
+            ->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'))
+            ->to(new NamedAddress($author->getEmail(), $author->getFirstName()))
+            ->subject('Your weekly report on the Space Bar!')
+            ->htmlTemplate('email/author-weekly-report.html.twig')
+            ->context([
+                'author' => $author,
+                'articles' => $articles,
+            ])
+            ->attach($pdf, sprintf('weekly-report-%s.pdf', date('Y-m-d')));
+
+        $this->mailer->send($email);
     }
 }
