diff --git a/src/Service/UploaderHelper.php b/src/Service/UploaderHelper.php
index 5fe26f6..51f0af8 100644
--- a/src/Service/UploaderHelper.php
+++ b/src/Service/UploaderHelper.php
@@ -13,6 +13,7 @@ use Symfony\Component\HttpFoundation\File\UploadedFile;
 class UploaderHelper
 {
     const ARTICLE_IMAGE = 'article_image';
+    const ARTICLE_REFERENCE = 'article_reference';
 
     private $filesystem;
 
@@ -35,26 +36,7 @@ class UploaderHelper
 
     public function uploadArticleImage(File $file, ?string $existingFilename): string
     {
-        if ($file instanceof UploadedFile) {
-            $originalFilename = $file->getClientOriginalName();
-        } else {
-            $originalFilename = $file->getFilename();
-        }
-        $newFilename = Urlizer::urlize(pathinfo($originalFilename, PATHINFO_FILENAME)).'-'.uniqid().'.'.$file->guessExtension();
-
-        $stream = fopen($file->getPathname(), 'r');
-        $result = $this->filesystem->writeStream(
-            self::ARTICLE_IMAGE.'/'.$newFilename,
-            $stream
-        );
-
-        if ($result === false) {
-            throw new \Exception(sprintf('Could not write uploaded file "%s"', $newFilename));
-        }
-
-        if (is_resource($stream)) {
-            fclose($stream);
-        }
+        $newFilename = $this->uploadFile($file, self::ARTICLE_IMAGE, true);
 
         if ($existingFilename) {
             try {
@@ -73,7 +55,7 @@ class UploaderHelper
 
     public function uploadArticleReference(File $file): string
     {
-        dd($file);
+        return $this->uploadFile($file, self::ARTICLE_REFERENCE, false);
     }
 
     public function getPublicPath(string $path): string
@@ -83,7 +65,7 @@ class UploaderHelper
             ->getBasePath().$this->publicAssetBaseUrl.'/'.$path;
     }
 
-    private function uploadFile(File $file, string $directory, bool $isPublic)
+    private function uploadFile(File $file, string $directory, bool $isPublic): string
     {
         if ($file instanceof UploadedFile) {
             $originalFilename = $file->getClientOriginalName();
@@ -92,9 +74,11 @@ class UploaderHelper
         }
         $newFilename = Urlizer::urlize(pathinfo($originalFilename, PATHINFO_FILENAME)).'-'.uniqid().'.'.$file->guessExtension();
 
+        $filesystem = $isPublic ? $this->filesystem : $this->privateFilesystem;
+
         $stream = fopen($file->getPathname(), 'r');
-        $result = $this->filesystem->writeStream(
-            self::ARTICLE_IMAGE.'/'.$newFilename,
+        $result = $filesystem->writeStream(
+            $directory.'/'.$newFilename,
             $stream
         );
 
@@ -105,5 +89,7 @@ class UploaderHelper
         if (is_resource($stream)) {
             fclose($stream);
         }
+
+        return $newFilename;
     }
 }
