diff --git a/src/Api/ArticleReferenceUploadApiModel.php b/src/Api/ArticleReferenceUploadApiModel.php
index 5f27316..1ab6ab7 100644
--- a/src/Api/ArticleReferenceUploadApiModel.php
+++ b/src/Api/ArticleReferenceUploadApiModel.php
@@ -23,4 +23,9 @@ class ArticleReferenceUploadApiModel
         $this->data = $data;
         $this->decodedData = base64_decode($data);
     }
+
+    public function getDecodedData(): ?string
+    {
+        return $this->decodedData;
+    }
 }
diff --git a/src/Controller/ArticleReferenceAdminController.php b/src/Controller/ArticleReferenceAdminController.php
index 33aa01e..e4c6953 100644
--- a/src/Controller/ArticleReferenceAdminController.php
+++ b/src/Controller/ArticleReferenceAdminController.php
@@ -9,6 +9,7 @@ use App\Service\UploaderHelper;
 use Aws\S3\S3Client;
 use Doctrine\ORM\EntityManagerInterface;
 use Sensio\Bundle\FrameworkExtraBundle\Configuration\IsGranted;
+use Symfony\Component\HttpFoundation\File\File as FileObject;
 use Symfony\Component\HttpFoundation\File\UploadedFile;
 use Symfony\Component\HttpFoundation\HeaderUtils;
 use Symfony\Component\HttpFoundation\RedirectResponse;
@@ -28,6 +29,7 @@ class ArticleReferenceAdminController extends BaseController
     public function uploadArticleReference(Article $article, Request $request, UploaderHelper $uploaderHelper, EntityManagerInterface $entityManager, ValidatorInterface $validator, SerializerInterface $serializer)
     {
         if ($request->headers->get('Content-Type') === 'application/json') {
+            /** @var ArticleReferenceUploadApiModel $uploadApiModel */
             $uploadApiModel = $serializer->deserialize(
                 $request->getContent(),
                 ArticleReferenceUploadApiModel::class,
@@ -39,7 +41,10 @@ class ArticleReferenceAdminController extends BaseController
                 return $this->json($violations, 400);
             }
 
-            dd($uploadApiModel);
+            $tmpPath = sys_get_temp_dir().'/sf_upload'.uniqid();
+            file_put_contents($tmpPath, $uploadApiModel->getDecodedData());
+            $uploadedFile = new FileObject($tmpPath);
+            dd($uploadedFile);
         } else {
             /** @var UploadedFile $uploadedFile */
             $uploadedFile = $request->files->get('reference');
