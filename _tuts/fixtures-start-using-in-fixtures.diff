diff --git a/src/DataFixtures/ArticleFixtures.php b/src/DataFixtures/ArticleFixtures.php
index 3f1ae08..4b90a2a 100644
--- a/src/DataFixtures/ArticleFixtures.php
+++ b/src/DataFixtures/ArticleFixtures.php
@@ -5,8 +5,10 @@ namespace App\DataFixtures;
 use App\Entity\Article;
 use App\Entity\Comment;
 use App\Entity\Tag;
+use App\Service\UploaderHelper;
 use Doctrine\Common\DataFixtures\DependentFixtureInterface;
 use Doctrine\Common\Persistence\ObjectManager;
+use Symfony\Component\HttpFoundation\File\File;
 
 class ArticleFixtures extends BaseFixture implements DependentFixtureInterface
 {
@@ -22,6 +24,13 @@ class ArticleFixtures extends BaseFixture implements DependentFixtureInterface
         'lightspeed.png',
     ];
 
+    private $uploaderHelper;
+
+    public function __construct(UploaderHelper $uploaderHelper)
+    {
+        $this->uploaderHelper = $uploaderHelper;
+    }
+
     protected function loadData(ObjectManager $manager)
     {
         $this->createMany(10, 'main_articles', function($count) use ($manager) {
@@ -52,9 +61,13 @@ EOF
                 $article->setPublishedAt($this->faker->dateTimeBetween('-100 days', '-1 days'));
             }
 
+            $randomImage = $this->faker->randomElement(self::$articleImages);
+            $imageFilename = $this->uploaderHelper
+                ->uploadArticleImage(new File(__DIR__.'/images/'.$randomImage));
+
             $article->setAuthor($this->getRandomReference('main_users'))
                 ->setHeartCount($this->faker->numberBetween(5, 100))
-                ->setImageFilename($this->faker->randomElement(self::$articleImages))
+                ->setImageFilename($imageFilename)
             ;
 
             $tags = $this->getRandomReferences('main_tags', $this->faker->numberBetween(0, 5));
diff --git a/public/images/asteroid.jpeg b/src/DataFixtures/images/asteroid.jpeg
similarity index 100%
rename from public/images/asteroid.jpeg
rename to src/DataFixtures/images/asteroid.jpeg
diff --git a/public/images/lightspeed.png b/src/DataFixtures/images/lightspeed.png
similarity index 100%
rename from public/images/lightspeed.png
rename to src/DataFixtures/images/lightspeed.png
diff --git a/public/images/mercury.jpeg b/src/DataFixtures/images/mercury.jpeg
similarity index 100%
rename from public/images/mercury.jpeg
rename to src/DataFixtures/images/mercury.jpeg
diff --git a/src/Service/UploaderHelper.php b/src/Service/UploaderHelper.php
index baa5f2d..189e8be 100644
--- a/src/Service/UploaderHelper.php
+++ b/src/Service/UploaderHelper.php
@@ -3,6 +3,7 @@
 namespace App\Service;
 
 use Gedmo\Sluggable\Util\Urlizer;
+use Symfony\Component\HttpFoundation\File\File;
 use Symfony\Component\Asset\Context\RequestStackContext;
 use Symfony\Component\HttpFoundation\File\UploadedFile;
 
@@ -20,14 +21,18 @@ class UploaderHelper
         $this->requestStackContext = $requestStackContext;
     }
 
-    public function uploadArticleImage(UploadedFile $uploadedFile): string
+    public function uploadArticleImage(File $file): string
     {
         $destination = $this->uploadsPath.'/'.self::ARTICLE_IMAGE;
 
-        $originalFilename = pathinfo($uploadedFile->getClientOriginalName(), PATHINFO_FILENAME);
-        $newFilename = Urlizer::urlize($originalFilename).'-'.uniqid().'.'.$uploadedFile->guessExtension();
+        if ($file instanceof UploadedFile) {
+            $originalFilename = $file->getClientOriginalName();
+        } else {
+            $originalFilename = $file->getFilename();
+        }
+        $newFilename = Urlizer::urlize(pathinfo($originalFilename, PATHINFO_FILENAME)).'-'.uniqid().'.'.$file->guessExtension();
 
-        $uploadedFile->move(
+        $file->move(
             $destination,
             $newFilename
         );
