diff --git a/src/Api/ArticleReferenceUploadApiModel.php b/src/Api/ArticleReferenceUploadApiModel.php
new file mode 100644
index 0000000..acddd1f
--- /dev/null
+++ b/src/Api/ArticleReferenceUploadApiModel.php
@@ -0,0 +1,18 @@
+<?php
+
+namespace App\Api;
+
+use Symfony\Component\Validator\Constraints as Assert;
+
+class ArticleReferenceUploadApiModel
+{
+    /**
+     * @Assert\NotBlank()
+     */
+    public $filename;
+
+    /**
+     * @Assert\NotBlank()
+     */
+    public $data;
+}
diff --git a/src/Controller/ArticleReferenceAdminController.php b/src/Controller/ArticleReferenceAdminController.php
index c72d572..33aa01e 100644
--- a/src/Controller/ArticleReferenceAdminController.php
+++ b/src/Controller/ArticleReferenceAdminController.php
@@ -2,6 +2,7 @@
 
 namespace App\Controller;
 
+use App\Api\ArticleReferenceUploadApiModel;
 use App\Entity\Article;
 use App\Entity\ArticleReference;
 use App\Service\UploaderHelper;
@@ -24,10 +25,25 @@ class ArticleReferenceAdminController extends BaseController
     /**
      * @Route("/admin/article/{id}/references", name="admin_article_add_reference", methods={"POST"})
      */
-    public function uploadArticleReference(Article $article, Request $request, UploaderHelper $uploaderHelper, EntityManagerInterface $entityManager, ValidatorInterface $validator)
+    public function uploadArticleReference(Article $article, Request $request, UploaderHelper $uploaderHelper, EntityManagerInterface $entityManager, ValidatorInterface $validator, SerializerInterface $serializer)
     {
-        /** @var UploadedFile $uploadedFile */
-        $uploadedFile = $request->files->get('reference');
+        if ($request->headers->get('Content-Type') === 'application/json') {
+            $uploadApiModel = $serializer->deserialize(
+                $request->getContent(),
+                ArticleReferenceUploadApiModel::class,
+                'json'
+            );
+
+            $violations = $validator->validate($uploadApiModel);
+            if ($violations->count() > 0) {
+                return $this->json($violations, 400);
+            }
+
+            dd($uploadApiModel);
+        } else {
+            /** @var UploadedFile $uploadedFile */
+            $uploadedFile = $request->files->get('reference');
+        }
 
         $violations = $validator->validate(
             $uploadedFile,
