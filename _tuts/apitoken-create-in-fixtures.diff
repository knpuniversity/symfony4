diff --git a/src/DataFixtures/UserFixture.php b/src/DataFixtures/UserFixture.php
index 38bc14c..c9e4cee 100644
--- a/src/DataFixtures/UserFixture.php
+++ b/src/DataFixtures/UserFixture.php
@@ -2,6 +2,7 @@
 
 namespace App\DataFixtures;
 
+use App\Entity\ApiToken;
 use App\Entity\User;
 use Doctrine\Common\Persistence\ObjectManager;
 use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;
@@ -17,7 +18,7 @@ class UserFixture extends BaseFixture
 
     protected function loadData(ObjectManager $manager)
     {
-        $this->createMany(10, 'main_users', function($i) {
+        $this->createMany(10, 'main_users', function($i) use ($manager) {
             $user = new User();
             $user->setEmail(sprintf('spacebar%d@example.com', $i));
             $user->setFirstName($this->faker->firstName);
@@ -31,6 +32,11 @@ class UserFixture extends BaseFixture
                 'engage'
             ));
 
+            $apiToken1 = new ApiToken($user);
+            $apiToken2 = new ApiToken($user);
+            $manager->persist($apiToken1);
+            $manager->persist($apiToken2);
+
             return $user;
         });
 
diff --git a/src/Entity/ApiToken.php b/src/Entity/ApiToken.php
index b468c8b..8f525ad 100644
--- a/src/Entity/ApiToken.php
+++ b/src/Entity/ApiToken.php
@@ -32,6 +32,13 @@ class ApiToken
      */
     private $user;
 
+    public function __construct(User $user)
+    {
+        $this->token = bin2hex(random_bytes(60));
+        $this->user = $user;
+        $this->expiresAt = new \DateTime('+1 hour');
+    }
+
     public function getId(): ?int
     {
         return $this->id;
@@ -42,34 +49,13 @@ class ApiToken
         return $this->token;
     }
 
-    public function setToken(string $token): self
-    {
-        $this->token = $token;
-
-        return $this;
-    }
-
     public function getExpiresAt(): ?\DateTimeInterface
     {
         return $this->expiresAt;
     }
 
-    public function setExpiresAt(\DateTimeInterface $expiresAt): self
-    {
-        $this->expiresAt = $expiresAt;
-
-        return $this;
-    }
-
     public function getUser(): ?User
     {
         return $this->user;
     }
-
-    public function setUser(?User $user): self
-    {
-        $this->user = $user;
-
-        return $this;
-    }
 }
