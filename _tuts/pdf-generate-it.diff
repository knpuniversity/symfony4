diff --git a/src/Command/AuthorWeeklyReportSendCommand.php b/src/Command/AuthorWeeklyReportSendCommand.php
index 9e4280f..0bdc2eb 100644
--- a/src/Command/AuthorWeeklyReportSendCommand.php
+++ b/src/Command/AuthorWeeklyReportSendCommand.php
@@ -4,6 +4,7 @@ namespace App\Command;
 
 use App\Repository\ArticleRepository;
 use App\Repository\UserRepository;
+use Knp\Snappy\Pdf;
 use Symfony\Bridge\Twig\Mime\TemplatedEmail;
 use Symfony\Component\Console\Command\Command;
 use Symfony\Component\Console\Input\InputArgument;
@@ -13,6 +14,7 @@ use Symfony\Component\Console\Output\OutputInterface;
 use Symfony\Component\Console\Style\SymfonyStyle;
 use Symfony\Component\Mailer\MailerInterface;
 use Symfony\Component\Mime\NamedAddress;
+use Twig\Environment;
 
 class AuthorWeeklyReportSendCommand extends Command
 {
@@ -21,14 +23,18 @@ class AuthorWeeklyReportSendCommand extends Command
     private $userRepository;
     private $articleRepository;
     private $mailer;
+    private $twig;
+    private $pdf;
 
-    public function __construct(UserRepository $userRepository, ArticleRepository $articleRepository, MailerInterface $mailer)
+    public function __construct(UserRepository $userRepository, ArticleRepository $articleRepository, MailerInterface $mailer, Environment $twig, Pdf $pdf)
     {
         parent::__construct(null);
 
         $this->userRepository = $userRepository;
         $this->articleRepository = $articleRepository;
         $this->mailer = $mailer;
+        $this->twig = $twig;
+        $this->pdf = $pdf;
     }
 
     protected function configure()
@@ -55,6 +61,12 @@ class AuthorWeeklyReportSendCommand extends Command
                 continue;
             }
 
+
+            $html = $this->twig->render('email/author-weekly-report-pdf.html.twig', [
+                'articles' => $articles,
+            ]);
+            $pdf = $this->pdf->getOutputFromHtml($html);
+
             $email = (new TemplatedEmail())
                 ->from(new NamedAddress('alienmailcarrier@example.com', 'The Space Bar'))
                 ->to(new NamedAddress($author->getEmail(), $author->getFirstName()))
