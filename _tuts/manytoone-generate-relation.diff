diff --git a/src/Entity/Article.php b/src/Entity/Article.php
index 75b80cc..00862f4 100644
--- a/src/Entity/Article.php
+++ b/src/Entity/Article.php
@@ -2,6 +2,8 @@
 
 namespace App\Entity;
 
+use Doctrine\Common\Collections\ArrayCollection;
+use Doctrine\Common\Collections\Collection;
 use Doctrine\ORM\Mapping as ORM;
 use Gedmo\Mapping\Annotation as Gedmo;
 use Gedmo\Timestampable\Traits\TimestampableEntity;
@@ -56,6 +58,16 @@ class Article
      */
     private $imageFilename;
 
+    /**
+     * @ORM\OneToMany(targetEntity="App\Entity\Comment", mappedBy="article")
+     */
+    private $comments;
+
+    public function __construct()
+    {
+        $this->comments = new ArrayCollection();
+    }
+
     public function getId()
     {
         return $this->id;
@@ -157,4 +169,35 @@ class Article
     {
         return 'images/'.$this->getImageFilename();
     }
+
+    /**
+     * @return Collection|Comment[]
+     */
+    public function getComments(): Collection
+    {
+        return $this->comments;
+    }
+
+    public function addComment(Comment $comment): self
+    {
+        if (!$this->comments->contains($comment)) {
+            $this->comments[] = $comment;
+            $comment->setArticle($this);
+        }
+
+        return $this;
+    }
+
+    public function removeComment(Comment $comment): self
+    {
+        if ($this->comments->contains($comment)) {
+            $this->comments->removeElement($comment);
+            // set the owning side to null (unless already changed)
+            if ($comment->getArticle() === $this) {
+                $comment->setArticle(null);
+            }
+        }
+
+        return $this;
+    }
 }
diff --git a/src/Entity/Comment.php b/src/Entity/Comment.php
index cc6b85d..bdd88b2 100644
--- a/src/Entity/Comment.php
+++ b/src/Entity/Comment.php
@@ -29,6 +29,12 @@ class Comment
      */
     private $content;
 
+    /**
+     * @ORM\ManyToOne(targetEntity="App\Entity\Article", inversedBy="comments")
+     * @ORM\JoinColumn(nullable=false)
+     */
+    private $article;
+
     public function getId()
     {
         return $this->id;
@@ -57,4 +63,16 @@ class Comment
 
         return $this;
     }
+
+    public function getArticle(): ?Article
+    {
+        return $this->article;
+    }
+
+    public function setArticle(?Article $article): self
+    {
+        $this->article = $article;
+
+        return $this;
+    }
 }
diff --git a/src/Migrations/Version20180426185536.php b/src/Migrations/Version20180426185536.php
new file mode 100644
index 0000000..c507f11
--- /dev/null
+++ b/src/Migrations/Version20180426185536.php
@@ -0,0 +1,32 @@
+<?php declare(strict_types = 1);
+
+namespace DoctrineMigrations;
+
+use Doctrine\DBAL\Schema\Schema;
+use Doctrine\Migrations\AbstractMigration;
+
+/**
+ * Auto-generated Migration: Please modify to your needs!
+ */
+class Version20180426185536 extends AbstractMigration
+{
+    public function up(Schema $schema): void
+    {
+        // this up() migration is auto-generated, please modify it to your needs
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+
+        $this->addSql('ALTER TABLE comment ADD article_id INT NOT NULL');
+        $this->addSql('ALTER TABLE comment ADD CONSTRAINT FK_9474526C7294869C FOREIGN KEY (article_id) REFERENCES article (id)');
+        $this->addSql('CREATE INDEX IDX_9474526C7294869C ON comment (article_id)');
+    }
+
+    public function down(Schema $schema): void
+    {
+        // this down() migration is auto-generated, please modify it to your needs
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+
+        $this->addSql('ALTER TABLE comment DROP FOREIGN KEY FK_9474526C7294869C');
+        $this->addSql('DROP INDEX IDX_9474526C7294869C ON comment');
+        $this->addSql('ALTER TABLE comment DROP article_id');
+    }
+}
