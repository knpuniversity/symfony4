diff --git a/src/Security/Voter/ArticleVoter.php b/src/Security/Voter/ArticleVoter.php
index fa62bfe..a180b6e 100644
--- a/src/Security/Voter/ArticleVoter.php
+++ b/src/Security/Voter/ArticleVoter.php
@@ -2,6 +2,7 @@
 
 namespace App\Security\Voter;
 
+use App\Entity\Article;
 use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
 use Symfony\Component\Security\Core\Authorization\Voter\Voter;
 use Symfony\Component\Security\Core\User\UserInterface;
@@ -12,12 +13,13 @@ class ArticleVoter extends Voter
     {
         // replace with your own logic
         // https://symfony.com/doc/current/security/voters.html
-        return in_array($attribute, ['EDIT', 'VIEW'])
-            && $subject instanceof App\Entity\BlogPost;
+        return in_array($attribute, ['MANAGE'])
+            && $subject instanceof Article;
     }
 
     protected function voteOnAttribute($attribute, $subject, TokenInterface $token)
     {
+        /** @var Article $subject */
         $user = $token->getUser();
         // if the user is anonymous, do not grant access
         if (!$user instanceof UserInterface) {
@@ -26,13 +28,12 @@ class ArticleVoter extends Voter
 
         // ... (check conditions and return true to grant permission) ...
         switch ($attribute) {
-            case 'EDIT':
-                // logic to determine if the user can EDIT
-                // return true or false
-                break;
-            case 'VIEW':
-                // logic to determine if the user can VIEW
-                // return true or false
+            case 'MANAGE':
+                // this is the author!
+                if ($subject->getAuthor() == $user) {
+                    return true;
+                }
+
                 break;
         }
 
